version: '3.8'

networks:
  default_lan:

services:

  nginx_front:
    image: nginx:stable-alpine
    container_name: nginx_front
    networks:
      - default_lan
    ports:
      - "8081:80"
    volumes:
      - ./apps/front:/var/www/project
      - ./nginx/front/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php_front
    #volumes_from:
    #  - php_front
    links:
      - "nginx_api:nginx_api"

  nginx_api:
    image: nginx:stable-alpine
    container_name: nginx_api
    networks:
      - default_lan
    ports:
      - "8082:80"
    volumes:
      - ./apps/api:/var/www/project
      - ./nginx/api/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php_api

  php_front:
    build:
      context: .
      dockerfile: ./php/front/Dockerfile
    container_name: php_front
    networks:
      - default_lan
    ports:
      - "9001:9000"
    volumes:
      - ./apps/front:/var/www/project
    tty: true
    stdin_open: true

  database:
    image: mysql:8
    container_name: database
    networks:
      - default_lan
    ports:
      - "43061:3306"
    # NOTE: if you need to persist database data between docker builds uncomment the following 'volumes..'
    #volumes:
    #  - ./mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_ROOT_USER: root
      MYSQL_PASSWORD: secret
      MYSQL_DATABASE: maindb
      MYSQL_ROOT_HOST: "%"
    tty: true
    stdin_open: true

  php_api:
    build:
      context: .
      dockerfile: ./php/api/Dockerfile
    container_name: php_api
    networks:
      - default_lan
    ports:
      - "9002:9000"
    volumes:
      - ./apps/api:/var/www/project
    #depends_on:
    #  - database
    links:
      - "database:database"
    tty: true
    stdin_open: true
